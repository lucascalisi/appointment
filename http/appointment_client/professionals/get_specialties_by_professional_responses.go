// Code generated by go-swagger; DO NOT EDIT.

package professionals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/appointment/http/models"
)

// GetSpecialtiesByProfessionalReader is a Reader for the GetSpecialtiesByProfessional structure.
type GetSpecialtiesByProfessionalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSpecialtiesByProfessionalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSpecialtiesByProfessionalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetSpecialtiesByProfessionalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSpecialtiesByProfessionalOK creates a GetSpecialtiesByProfessionalOK with default headers values
func NewGetSpecialtiesByProfessionalOK() *GetSpecialtiesByProfessionalOK {
	return &GetSpecialtiesByProfessionalOK{}
}

/*GetSpecialtiesByProfessionalOK handles this case with default header values.

resultado specialties professional
*/
type GetSpecialtiesByProfessionalOK struct {
	Payload []*models.Specialty
}

func (o *GetSpecialtiesByProfessionalOK) Error() string {
	return fmt.Sprintf("[GET /v1/professionals/{id}/specialties][%d] getSpecialtiesByProfessionalOK  %+v", 200, o.Payload)
}

func (o *GetSpecialtiesByProfessionalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSpecialtiesByProfessionalInternalServerError creates a GetSpecialtiesByProfessionalInternalServerError with default headers values
func NewGetSpecialtiesByProfessionalInternalServerError() *GetSpecialtiesByProfessionalInternalServerError {
	return &GetSpecialtiesByProfessionalInternalServerError{}
}

/*GetSpecialtiesByProfessionalInternalServerError handles this case with default header values.

internal server error
*/
type GetSpecialtiesByProfessionalInternalServerError struct {
	Payload *models.Error
}

func (o *GetSpecialtiesByProfessionalInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/professionals/{id}/specialties][%d] getSpecialtiesByProfessionalInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSpecialtiesByProfessionalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
