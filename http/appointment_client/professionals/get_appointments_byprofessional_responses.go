// Code generated by go-swagger; DO NOT EDIT.

package professionals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/appointment/http/models"
)

// GetAppointmentsByprofessionalReader is a Reader for the GetAppointmentsByprofessional structure.
type GetAppointmentsByprofessionalReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAppointmentsByprofessionalReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAppointmentsByprofessionalOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewGetAppointmentsByprofessionalInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAppointmentsByprofessionalOK creates a GetAppointmentsByprofessionalOK with default headers values
func NewGetAppointmentsByprofessionalOK() *GetAppointmentsByprofessionalOK {
	return &GetAppointmentsByprofessionalOK{}
}

/*GetAppointmentsByprofessionalOK handles this case with default header values.

result search appointment professional
*/
type GetAppointmentsByprofessionalOK struct {
	Payload []*models.Appointment
}

func (o *GetAppointmentsByprofessionalOK) Error() string {
	return fmt.Sprintf("[GET /v1/professionals/{id}/appointments][%d] getAppointmentsByprofessionalOK  %+v", 200, o.Payload)
}

func (o *GetAppointmentsByprofessionalOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAppointmentsByprofessionalInternalServerError creates a GetAppointmentsByprofessionalInternalServerError with default headers values
func NewGetAppointmentsByprofessionalInternalServerError() *GetAppointmentsByprofessionalInternalServerError {
	return &GetAppointmentsByprofessionalInternalServerError{}
}

/*GetAppointmentsByprofessionalInternalServerError handles this case with default header values.

internal server error
*/
type GetAppointmentsByprofessionalInternalServerError struct {
	Payload *models.Error
}

func (o *GetAppointmentsByprofessionalInternalServerError) Error() string {
	return fmt.Sprintf("[GET /v1/professionals/{id}/appointments][%d] getAppointmentsByprofessionalInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAppointmentsByprofessionalInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
