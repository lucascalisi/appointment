// Code generated by go-swagger; DO NOT EDIT.

package queue

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/appointment/http/models"
)

// AddPatientToQueueReader is a Reader for the AddPatientToQueue structure.
type AddPatientToQueueReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddPatientToQueueReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewAddPatientToQueueOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 500:
		result := NewAddPatientToQueueInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewAddPatientToQueueOK creates a AddPatientToQueueOK with default headers values
func NewAddPatientToQueueOK() *AddPatientToQueueOK {
	return &AddPatientToQueueOK{}
}

/*AddPatientToQueueOK handles this case with default header values.

added successful
*/
type AddPatientToQueueOK struct {
}

func (o *AddPatientToQueueOK) Error() string {
	return fmt.Sprintf("[POST /v1/queue][%d] addPatientToQueueOK ", 200)
}

func (o *AddPatientToQueueOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAddPatientToQueueInternalServerError creates a AddPatientToQueueInternalServerError with default headers values
func NewAddPatientToQueueInternalServerError() *AddPatientToQueueInternalServerError {
	return &AddPatientToQueueInternalServerError{}
}

/*AddPatientToQueueInternalServerError handles this case with default header values.

internal server error
*/
type AddPatientToQueueInternalServerError struct {
	Payload *models.Error
}

func (o *AddPatientToQueueInternalServerError) Error() string {
	return fmt.Sprintf("[POST /v1/queue][%d] addPatientToQueueInternalServerError  %+v", 500, o.Payload)
}

func (o *AddPatientToQueueInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
