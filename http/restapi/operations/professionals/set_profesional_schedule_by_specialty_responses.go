// Code generated by go-swagger; DO NOT EDIT.

package professionals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/appointment/http/models"
)

// SetProfesionalScheduleBySpecialtyOKCode is the HTTP code returned for type SetProfesionalScheduleBySpecialtyOK
const SetProfesionalScheduleBySpecialtyOKCode int = 200

/*SetProfesionalScheduleBySpecialtyOK resultado schedule professional by specialty

swagger:response setProfesionalScheduleBySpecialtyOK
*/
type SetProfesionalScheduleBySpecialtyOK struct {

	/*
	  In: Body
	*/
	Payload []*models.Schedule `json:"body,omitempty"`
}

// NewSetProfesionalScheduleBySpecialtyOK creates SetProfesionalScheduleBySpecialtyOK with default headers values
func NewSetProfesionalScheduleBySpecialtyOK() *SetProfesionalScheduleBySpecialtyOK {

	return &SetProfesionalScheduleBySpecialtyOK{}
}

// WithPayload adds the payload to the set profesional schedule by specialty o k response
func (o *SetProfesionalScheduleBySpecialtyOK) WithPayload(payload []*models.Schedule) *SetProfesionalScheduleBySpecialtyOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set profesional schedule by specialty o k response
func (o *SetProfesionalScheduleBySpecialtyOK) SetPayload(payload []*models.Schedule) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetProfesionalScheduleBySpecialtyOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.Schedule, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// SetProfesionalScheduleBySpecialtyInternalServerErrorCode is the HTTP code returned for type SetProfesionalScheduleBySpecialtyInternalServerError
const SetProfesionalScheduleBySpecialtyInternalServerErrorCode int = 500

/*SetProfesionalScheduleBySpecialtyInternalServerError internal server error

swagger:response setProfesionalScheduleBySpecialtyInternalServerError
*/
type SetProfesionalScheduleBySpecialtyInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewSetProfesionalScheduleBySpecialtyInternalServerError creates SetProfesionalScheduleBySpecialtyInternalServerError with default headers values
func NewSetProfesionalScheduleBySpecialtyInternalServerError() *SetProfesionalScheduleBySpecialtyInternalServerError {

	return &SetProfesionalScheduleBySpecialtyInternalServerError{}
}

// WithPayload adds the payload to the set profesional schedule by specialty internal server error response
func (o *SetProfesionalScheduleBySpecialtyInternalServerError) WithPayload(payload *models.Error) *SetProfesionalScheduleBySpecialtyInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the set profesional schedule by specialty internal server error response
func (o *SetProfesionalScheduleBySpecialtyInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *SetProfesionalScheduleBySpecialtyInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
