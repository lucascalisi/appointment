// Code generated by go-swagger; DO NOT EDIT.

package professionals

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/appointment/http/models"
)

// CancelAppointmentProfessionalOKCode is the HTTP code returned for type CancelAppointmentProfessionalOK
const CancelAppointmentProfessionalOKCode int = 200

/*CancelAppointmentProfessionalOK get appointment for professional

swagger:response cancelAppointmentProfessionalOK
*/
type CancelAppointmentProfessionalOK struct {
}

// NewCancelAppointmentProfessionalOK creates CancelAppointmentProfessionalOK with default headers values
func NewCancelAppointmentProfessionalOK() *CancelAppointmentProfessionalOK {

	return &CancelAppointmentProfessionalOK{}
}

// WriteResponse to the client
func (o *CancelAppointmentProfessionalOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// CancelAppointmentProfessionalInternalServerErrorCode is the HTTP code returned for type CancelAppointmentProfessionalInternalServerError
const CancelAppointmentProfessionalInternalServerErrorCode int = 500

/*CancelAppointmentProfessionalInternalServerError internal server error

swagger:response cancelAppointmentProfessionalInternalServerError
*/
type CancelAppointmentProfessionalInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCancelAppointmentProfessionalInternalServerError creates CancelAppointmentProfessionalInternalServerError with default headers values
func NewCancelAppointmentProfessionalInternalServerError() *CancelAppointmentProfessionalInternalServerError {

	return &CancelAppointmentProfessionalInternalServerError{}
}

// WithPayload adds the payload to the cancel appointment professional internal server error response
func (o *CancelAppointmentProfessionalInternalServerError) WithPayload(payload *models.Error) *CancelAppointmentProfessionalInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the cancel appointment professional internal server error response
func (o *CancelAppointmentProfessionalInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CancelAppointmentProfessionalInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
