// Code generated by go-swagger; DO NOT EDIT.

package queue

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	models "github.com/appointment/http/models"
)

// GetQueueOKCode is the HTTP code returned for type GetQueueOK
const GetQueueOKCode int = 200

/*GetQueueOK get successful

swagger:response getQueueOK
*/
type GetQueueOK struct {

	/*
	  In: Body
	*/
	Payload *models.Queue `json:"body,omitempty"`
}

// NewGetQueueOK creates GetQueueOK with default headers values
func NewGetQueueOK() *GetQueueOK {

	return &GetQueueOK{}
}

// WithPayload adds the payload to the get queue o k response
func (o *GetQueueOK) WithPayload(payload *models.Queue) *GetQueueOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get queue o k response
func (o *GetQueueOK) SetPayload(payload *models.Queue) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQueueOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetQueueInternalServerErrorCode is the HTTP code returned for type GetQueueInternalServerError
const GetQueueInternalServerErrorCode int = 500

/*GetQueueInternalServerError internal server error

swagger:response getQueueInternalServerError
*/
type GetQueueInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewGetQueueInternalServerError creates GetQueueInternalServerError with default headers values
func NewGetQueueInternalServerError() *GetQueueInternalServerError {

	return &GetQueueInternalServerError{}
}

// WithPayload adds the payload to the get queue internal server error response
func (o *GetQueueInternalServerError) WithPayload(payload *models.Error) *GetQueueInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get queue internal server error response
func (o *GetQueueInternalServerError) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetQueueInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
